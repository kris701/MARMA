(define (domain gripper-strips)

(:predicates (fix_room ?r)
 (fix_ball ?b)
 (fix_gripper ?g)
 (fix_at-robby ?r)
 (fix_at ?b ?r)
 (fix_free ?g)
 (fix_carry ?o ?g)
 (attack_room ?r)
 (attack_ball ?b)
 (attack_gripper ?g)
 (attack_at-robby ?r)
 (attack_at ?b ?r)
 (attack_free ?g)
 (attack_carry ?o ?g)
)

(:action fix_move
:parameters ( ?from ?to)
:precondition (and (fix_room ?from)
 (fix_room ?to)
 (fix_at-robby ?from)
)
:effect (and (fix_at-robby ?to)
 (not (fix_at-robby ?from))
)
)

(:action fix_pick
:parameters ( ?obj ?room ?gripper)
:precondition (and (fix_ball ?obj)
 (fix_room ?room)
 (fix_gripper ?gripper)
 (fix_at ?obj ?room)
 (fix_at-robby ?room)
 (fix_free ?gripper)
)
:effect (and (fix_carry ?obj ?gripper)
 (not (fix_at ?obj ?room))
 (not (fix_free ?gripper))
)
)

(:action fix_drop
:parameters ( ?obj ?room ?gripper)
:precondition (and (fix_ball ?obj)
 (fix_room ?room)
 (fix_gripper ?gripper)
 (fix_carry ?obj ?gripper)
 (fix_at-robby ?room)
)
:effect (and (fix_at ?obj ?room)
 (fix_free ?gripper)
 (not (fix_carry ?obj ?gripper))
)
)

(:action attack_move
:parameters ( ?from ?to)
:precondition (and (attack_room ?from)
 (attack_room ?to)
 (attack_at-robby ?from)
)
:effect (and (attack_at-robby ?to)
 (not (attack_at-robby ?from))
)
)

(:action attack_pick
:parameters ( ?obj ?room ?gripper)
:precondition (and (attack_ball ?obj)
 (attack_room ?room)
 (attack_gripper ?gripper)
 (attack_at ?obj ?room)
 (attack_at-robby ?room)
 (attack_free ?gripper)
)
:effect (and (attack_carry ?obj ?gripper)
 (not (attack_at ?obj ?room))
 (not (attack_free ?gripper))
)
)

(:action attack_drop
:parameters ( ?obj ?room ?gripper)
:precondition (and (attack_ball ?obj)
 (attack_room ?room)
 (attack_gripper ?gripper)
 (attack_carry ?obj ?gripper)
 (attack_at-robby ?room)
)
:effect (and (attack_at ?obj ?room)
 (attack_free ?gripper)
 (not (attack_carry ?obj ?gripper))
)
)

)